{"id":"../../../../node_modules/data-urls/lib/utils.js","dependencies":[{"name":"C:\\Users\\voide\\OneDrive\\Documents\\GitHub\\newClern\\package.json","includedInParent":true,"mtime":1608076961215},{"name":"C:\\Users\\voide\\node_modules\\data-urls\\package.json","includedInParent":true,"mtime":499162500000},{"name":"whatwg-url","loc":{"line":2,"column":34},"parent":"C:\\Users\\voide\\node_modules\\data-urls\\lib\\utils.js","resolved":"C:\\Users\\voide\\node_modules\\whatwg-url\\lib\\public-api.js"},{"name":"abab","loc":{"line":3,"column":25},"parent":"C:\\Users\\voide\\node_modules\\data-urls\\lib\\utils.js","resolved":"C:\\Users\\voide\\node_modules\\abab\\index.js"},{"name":"buffer","parent":"C:\\Users\\voide\\node_modules\\data-urls\\lib\\utils.js","resolved":"C:\\Users\\voide\\AppData\\Roaming\\npm-cache\\_npx\\17616\\node_modules\\parcel\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n\"use strict\";\nconst { percentDecode } = require(\"whatwg-url\");\nconst { atob } = require(\"abab\");\n\nexports.stripLeadingAndTrailingASCIIWhitespace = string => {\n  return string.replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\nexports.stringPercentDecode = input => {\n  return percentDecode(Buffer.from(input, \"utf-8\"));\n};\n\nexports.isomorphicDecode = input => {\n  return input.toString(\"binary\");\n};\n\nexports.forgivingBase64Decode = data => {\n  const asString = atob(data);\n  if (asString === null) {\n    return null;\n  }\n  return Buffer.from(asString, \"binary\");\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../../node_modules/data-urls/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}}],"sources":{"../../../../node_modules/data-urls/lib/utils.js":"\"use strict\";\nconst { percentDecode } = require(\"whatwg-url\");\nconst { atob } = require(\"abab\");\n\nexports.stripLeadingAndTrailingASCIIWhitespace = string => {\n  return string.replace(/^[ \\t\\n\\f\\r]+/, \"\").replace(/[ \\t\\n\\f\\r]+$/, \"\");\n};\n\nexports.stringPercentDecode = input => {\n  return percentDecode(Buffer.from(input, \"utf-8\"));\n};\n\nexports.isomorphicDecode = input => {\n  return input.toString(\"binary\");\n};\n\nexports.forgivingBase64Decode = data => {\n  const asString = atob(data);\n  if (asString === null) {\n    return null;\n  }\n  return Buffer.from(asString, \"binary\");\n};\n"},"lineCount":25}},"error":null,"hash":"aacf3162402d905438c5ab7d1d1b472f","cacheData":{"env":{}}}